name: DTAP Deployment
on:
  push:
    branches:
      - master
      - staging
      - development

jobs:
  SonarQube:
    name: SonarQube analysis
    if: github.ref == 'refs/heads/development'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set PATH
        run: echo "/home/student/.dotnet/tools" >> $GITHUB_PATH
      - name: Scan with Sonar
        run: |
          echo $SONAR_HOST_URL
          dotnet sonarscanner begin /k:"Keuzewijzer-Server" /d:sonar.host.url=$SONAR_HOST_URL /d:sonar.token=$SONAR_TOKEN
          dotnet build
          dotnet sonarscanner end /d:sonar.token=$SONAR_TOKEN
        env:
          SONAR_HOST_URL: "${{ secrets.SONAR_HOST_URL }}"
          SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
        working-directory: ${{ github.workspace }}
      - name: Cleanup
        run: |
          rm -rf .sonar
          rm -rf **/bin
          rm -rf **/obj
  deploy_dev:
    name: DEV
    if: github.ref == 'refs/heads/changemeback'
    environment:
      name: DEV
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prune old images
        run: docker image prune -a -f
        working-directory: ${{ github.workspace }}
        
      - name: Prune build cache
        run: docker builder prune -a -f
        working-directory: ${{ github.workspace }}
        
      - name: Build shared dll
        run: |
          export DOTNET_ROOT=$HOME/.dotnet
          export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools
          cd ./KeuzeWijzerCore && dotnet publish --os linux --arch x64 /t:PublishContainer

      - name: Copy shared dll
        run: |
          cp ./KeuzeWijzerCore/bin/Release/net8.0/linux-x64/KeuzeWijzerCore.dll ./

      - name: Build and start container for Development
        run: |
          docker compose build
          docker compose -f docker-compose.yml -p ${{ vars.ENV_KEY }}-server up -d --remove-orphans
        env:
          SENDGRID_KEY: ${{ secrets.SENDGRID_KEY }}
          AZUREAD_CLIENTSECRET: "${{ secrets.AZUREAD_CLIENTSECRET }}"
          API_PORT: "${{ vars.API_PORT }}"
          MVC_PORT: "${{ vars.MVC_PORT }}"
          ASPNETCORE_ENVIRONMENT: "${{ vars.ASPNETCORE_ENVIRONMENT }}"
          DB_HOST: "${{ vars.DB_HOST }}"
          DB_NAME: "${{ vars.DB_NAME }}"
          DB_USER: "${{ secrets.DB_USER }}"
          DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
          ENV_KEY: "${{ vars.ENV_KEY }}"
        working-directory: ${{ github.workspace }}

  deploy_tst:
    name: TST
    if: github.ref == 'refs/heads/staging'
    environment:
      name: TST
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prune old images
        run: docker image prune -a -f
        working-directory: ${{ github.workspace }}

      - name: Prune build cache
        run: docker builder prune -a -f
        working-directory: ${{ github.workspace }}        

      - name: Build shared dll
        run: |
          export DOTNET_ROOT=$HOME/.dotnet
          export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools
          cd ./KeuzeWijzerCore && dotnet publish --os linux --arch x64 /t:PublishContainer

      - name: Copy shared dll
        run: |
          cp ./KeuzeWijzerCore/bin/Release/net8.0/linux-x64/KeuzeWijzerCore.dll ./

      - name: Build and start container for Development
        run: |
          docker compose build
          docker compose -f docker-compose.yml -p ${{ vars.ENV_KEY }}-server up -d --remove-orphans
        env:
          SENDGRID_KEY: ${{ secrets.SENDGRID_KEY }}
          AZUREAD_CLIENTSECRET: "${{ secrets.AZUREAD_CLIENTSECRET }}"
          API_PORT: "${{ vars.API_PORT }}"
          MVC_PORT: "${{ vars.MVC_PORT }}"
          ASPNETCORE_ENVIRONMENT: "${{ vars.ASPNETCORE_ENVIRONMENT }}"
          DB_HOST: "${{ vars.DB_HOST }}"
          DB_NAME: "${{ vars.DB_NAME }}"
          DB_USER: "${{ secrets.DB_USER }}"
          DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
          ENV_KEY: "${{ vars.ENV_KEY }}"
        working-directory: ${{ github.workspace }}

  deploy_acc:
    name: ACC
    if: github.ref == 'refs/heads/staging'
    environment:
      name: ACC
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prune old images
        run: docker image prune -a -f
        working-directory: ${{ github.workspace }}

      - name: Prune build cache
        run: docker builder prune -a -f
        working-directory: ${{ github.workspace }}        

      - name: Build shared dll
        run: |
          export DOTNET_ROOT=$HOME/.dotnet
          export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools
          cd ./KeuzeWijzerCore && dotnet publish --os linux --arch x64 /t:PublishContainer

      - name: Copy shared dll
        run: |
          cp ./KeuzeWijzerCore/bin/Release/net8.0/linux-x64/KeuzeWijzerCore.dll ./

      - name: Build and start container for Development
        run: |
          docker compose build
          docker compose -f docker-compose.yml -p ${{ vars.ENV_KEY }}-server up -d --remove-orphans
        env:
          SENDGRID_KEY: ${{ secrets.SENDGRID_KEY }}
          AZUREAD_CLIENTSECRET: "${{ secrets.AZUREAD_CLIENTSECRET }}"
          API_PORT: "${{ vars.API_PORT }}"
          MVC_PORT: "${{ vars.MVC_PORT }}"
          ASPNETCORE_ENVIRONMENT: "${{ vars.ASPNETCORE_ENVIRONMENT }}"
          DB_HOST: "${{ vars.DB_HOST }}"
          DB_NAME: "${{ vars.DB_NAME }}"
          DB_USER: "${{ secrets.DB_USER }}"
          DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
          ENV_KEY: "${{ vars.ENV_KEY }}"
        working-directory: ${{ github.workspace }}

  deploy_prod:
    name: PRD
    if: github.ref == 'refs/heads/master'
    environment:
      name: PRD
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prune old images
        run: docker image prune -a -f
        working-directory: ${{ github.workspace }}

      - name: Prune build cache
        run: docker builder prune -a -f
        working-directory: ${{ github.workspace }}        

      - name: Build shared dll
        run: |
          export DOTNET_ROOT=$HOME/.dotnet
          export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools
          cd ./KeuzeWijzerCore && dotnet publish --os linux --arch x64 /t:PublishContainer

      - name: Copy shared dll
        run: |
          cp ./KeuzeWijzerCore/bin/Release/net8.0/linux-x64/KeuzeWijzerCore.dll ./

      - name: Build and start container for Production
        run: |
          docker compose build
          docker compose -f docker-compose.yml -p ${{ vars.ENV_KEY }}-server up -d --remove-orphans
        env:
          SENDGRID_KEY: ${{ secrets.SENDGRID_KEY }}
          AZUREAD_CLIENTSECRET: "${{ secrets.AZUREAD_CLIENTSECRET }}"
          API_PORT: "${{ vars.API_PORT }}"
          MVC_PORT: "${{ vars.MVC_PORT }}"
          ASPNETCORE_ENVIRONMENT: "${{ vars.ASPNETCORE_ENVIRONMENT }}"
          DB_HOST: "${{ vars.DB_HOST }}"
          DB_NAME: "${{ vars.DB_NAME }}"
          DB_USER: "${{ secrets.DB_USER }}"
          DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
          ENV_KEY: "${{ vars.ENV_KEY }}"
          working-directory: ${{ github.workspace }}
