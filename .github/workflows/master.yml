name: DTAP Deployment
on:
  push:
    branches:
      - master
      - development
      # Add other branches as needed

jobs:
  deploy_dev:
    name: DEV
    if: github.ref == 'refs/heads/development'
    environment: 
      name: DEV   
    runs-on: self-hosted
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Prune old images
      run: docker image prune -a -f
      working-directory: ${{ github.workspace }}

    - name: Build and start container for Development
      run: |
        docker compose build
        docker compose -f docker-compose.yml -p ${{ ENV_KEY }} up -d --remove-orphans
      env:
        ASPNETCORE_ENVIRONMENT: '${{ env.ASPNETCORE_ENVIRONMENT }}'
        DB_HOST: '${{ env.DB_HOST }}'
        DB_NAME: '${{ env.DB_NAME }}'
        DB_USER: '${{ secrets.DB_USER }}'
        DB_PASSWORD: '${{ secrets.DB_PASSWORD }}'
        ENV_KEY: '${{ env.ENV_KEY }}'   
      working-directory: ${{ github.workspace }}
        
  deploy_prod:
    name: PRD
    if: github.ref == 'refs/heads/master'
    environment: 
      name: PRD        
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prune old images
        run: docker image prune -a -f
        working-directory: ${{ github.workspace }}

      - name: Build and start container for Production
        run: |
          docker compose build
          docker compose -f docker-compose.yml -p ${{ ENV_KEY }} up -d --remove-orphans
        env:
            ASPNETCORE_ENVIRONMENT: '${{ env.ASPNETCORE_ENVIRONMENT }}'
            DB_HOST: '${{ env.DB_HOST }}'
            DB_NAME: '${{ env.DB_NAME }}'
            DB_USER: '${{ secrets.DB_USER }}'
            DB_PASSWORD: '${{ secrets.DB_PASSWORD }}'
            ENV_KEY: '${{ env.ENV_KEY }}'            
        working-directory: ${{ github.workspace }}
